/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3-rc-1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id "application"
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    implementation 'fr.inria.gforge.spoon:spoon-core:+'    
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    implementation group: 'org.eclipse.lsp4j', name: 'org.eclipse.lsp4j', version: '+'
    implementation "org.slf4j:slf4j-simple:+" 

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
mainClassName = 'xyz.keksdose.spoon.langserver.Start'
jar {
    manifest {
        attributes 'Main-Class' : 'xyz.keksdose.spoon.langserver.Start'
                attributes 'Multi-Release': 'true'

    }
    doFirst {
        //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
        from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
        from "src/main/resources"
    }

    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA' 

}
